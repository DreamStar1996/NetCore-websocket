<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
autoReload="true">
  <!---输出目标target
每个target代表一个输出目标，它主要包含两个属性：name和type。name是输出模板的名称，在后面的路由规则中使用，type则是输出类型，常见的有：Console输出到控制台、Debugger输出到VS输出窗口、File输出到文件、Mail输出为邮件发送
、Network输出到网络地址、Database输出到数据库
-->
  <targets>
    <!--屏幕打印消息-->
    <!--<target name="console" xsi:type="Console" />-->
    <!--VS输出窗口-->
    <!--<target name="debugger" xsi:type="Debugger" layout="${date:format=HH\:mm\:ss.fff}: ${message}" />-->
    <!--保存至文件-->
    <!--maxArchiveFiles="30"-->
    <!--<target name="debug_file" xsi:type="File"
                  fileName="${basedir}/NLogs/${shortdate}/debug.html"
                  layout="${longdate} | ${level:uppercase=false} | ${message} ${onexception:${exception:format=tostring} ${newline} ${stacktrace} ${newline}" />-->
    <target name="debug_file" xsi:type="File"
                  fileName="${basedir}/NLogs/${shortdate}/debug.html"
                  layout="&lt;HR&gt;&lt;font COLOR=red&gt;【操作时间】&lt;/font&gt;：${date} 
                  &lt;BR&gt;&lt;font COLOR=red&gt;【操作级别】&lt;/font&gt;：${level:uppercase=true} 
                  &lt;BR&gt;&lt;font COLOR=red&gt;【输出消息】&lt;/font&gt;：${message}
                  &lt;BR&gt;&lt;font COLOR=red&gt;【异常消息】&lt;/font&gt;：${onexception:${exception:format=tostring}}
                  &lt;BR&gt;&lt;font COLOR=red&gt;【堆栈消息】&lt;/font&gt;：${stacktrace}
                  &lt;HR Size=1&gt;" />
    <target name="info_file" xsi:type="File"
                  fileName="${basedir}/NLogs/${shortdate}/info.html"
                  layout="&lt;HR&gt;&lt;font COLOR=red&gt;【操作时间】&lt;/font&gt;：${date} 
                  &lt;BR&gt;&lt;font COLOR=red&gt;【操作级别】&lt;/font&gt;：${level:uppercase=true} 
                  &lt;BR&gt;&lt;font COLOR=red&gt;【输出消息】&lt;/font&gt;：${message}
                  &lt;BR&gt;&lt;font COLOR=red&gt;【异常消息】&lt;/font&gt;：${onexception:${exception:format=tostring}}
                  &lt;BR&gt;&lt;font COLOR=red&gt;【堆栈消息】&lt;/font&gt;：${stacktrace}
                  &lt;HR Size=1&gt;" />
    <target name="warn_file" xsi:type="File"
                  fileName="${basedir}/NLogs/${shortdate}/warn.html"
                  layout="&lt;HR&gt;&lt;font COLOR=red&gt;【操作时间】&lt;/font&gt;：${date} 
                  &lt;BR&gt;&lt;font COLOR=red&gt;【操作级别】&lt;/font&gt;：${level:uppercase=true} 
                  &lt;BR&gt;&lt;font COLOR=red&gt;【输出消息】&lt;/font&gt;：${message}
                  &lt;BR&gt;&lt;font COLOR=red&gt;【异常消息】&lt;/font&gt;：${onexception:${exception:format=tostring}}
                  &lt;BR&gt;&lt;font COLOR=red&gt;【堆栈消息】&lt;/font&gt;：${stacktrace}
                  &lt;HR Size=1&gt;" />
    <target name="error_file" xsi:type="File"
                  fileName="${basedir}/NLogs/${shortdate}/error.html"
                  layout="&lt;HR&gt;&lt;font COLOR=red&gt;【操作时间】&lt;/font&gt;：${date} 
                  &lt;BR&gt;&lt;font COLOR=red&gt;【操作级别】&lt;/font&gt;：${level:uppercase=true} 
                  &lt;BR&gt;&lt;font COLOR=red&gt;【输出消息】&lt;/font&gt;：${message}
                  &lt;BR&gt;&lt;font COLOR=red&gt;【异常消息】&lt;/font&gt;：${onexception:${exception:format=tostring}}
                  &lt;BR&gt;&lt;font COLOR=red&gt;【堆栈消息】&lt;/font&gt;：${stacktrace}
                  &lt;HR Size=1&gt;" />
  </targets>
  <!---路由规则主要用于将日志和输出目标匹配起来，它一般有如下几个属性：
  name记录者的名字 (允许使用通配符*)、minlevel匹配日志范围的最低级别、maxlevel匹配日志范围的最高级别、level匹配的单一日志级别、levels - 匹配的一系列日志级别，由逗号分隔、writeTo - 规则匹配时日志应该被写入的一系列目标，由逗号分隔。
  -->
  <rules>
    <!--将所有的日志输出到控制台中-->
    <!--<logger name="*" writeTo="console" />-->
    <!--将Debug级别以上的日志输出到Debugger中-->
    <!--<logger name="*" minlevel="Debug" writeTo="debugger" />-->
    <!--将Error级别以上的日志输出到文件中-->
    <!--<logger name="*" minlevel="Error" writeTo="error_file" />-->
    <!--<logger name="*"  writeTo="error_file" />-->
    <logger name="*" level="Debug" writeTo="debug_file" />
    <logger name="*" level="Info" writeTo="info_file" />
    <logger name="*" level="Warn" writeTo="warn_file" />
    <logger name="*" level="Error" writeTo="error_file" />
  </rules>
</nlog>